{"version":3,"file":"static/js/113.8e145182.chunk.js","mappings":"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","sources":["webpack://youtube-clone/./src/components/search-custom-video/styles.module.scss?7135","components/search-custom-video/index.jsx","pages/video-detail-page/close-videos-list.jsx","utils/formatters.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"videoContainer\":\"styles_videoContainer__uJtnE\",\"videoImage\":\"styles_videoImage__cSiw0\",\"videoContent\":\"styles_videoContent__hQZyG\",\"para\":\"styles_para__lrrXJ\",\"videoDesc\":\"styles_videoDesc__O7qxP\"};","import { Link } from \"react-router-dom\";\r\nimport Image from \"../image-component\";\r\nimport placeholderimage from \"../../assets/placeholdersrc.jpg\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { dateFormatter } from \"../../utils/formatters\";\r\n\r\nexport const SearchCustomVideo = (props) => {\r\n  const {\r\n    videoImage,\r\n    title,\r\n    timePosted,\r\n    link,\r\n    authorTitle,\r\n    description,\r\n    videoContentClassName,\r\n    extraClassImage,\r\n    showImage = true\r\n  } = props;\r\n  return (\r\n    <Link to={link} className={styles.videoContainer}>\r\n      <figure className={[styles.videoImage, extraClassImage]?.join(' ')}>\r\n        <Image\r\n          loadingSrc={placeholderimage}\r\n          src={videoImage}\r\n          placeHolderStyle={{ width: \"100%\" }}\r\n        />\r\n      </figure>\r\n      <div className={[styles.videoContent, videoContentClassName]?.join(' ')}>\r\n        <h3>{title}</h3>\r\n        <p className={styles.para}>{dateFormatter(timePosted)}</p>\r\n\r\n        <div className={styles.videoDesc}>\r\n          {showImage && \r\n          <Image\r\n            loadingSrc={placeholderimage}\r\n            src={videoImage}\r\n            placeHolderStyle={{ width: \"40px\" }}\r\n          />\r\n        }\r\n          <p className={styles.para}>{authorTitle}</p>\r\n        </div>\r\n\r\n        <p className={styles.para}>{description}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import { useParams } from \"react-router-dom\";\r\nimport { CustomFetchHook } from \"../../utils/fetchHook\";\r\nimport { SearchCustomVideo } from \"../../components/search-custom-video\";\r\nimport { SearchedVideosLoader } from \"../../loaders/searched-videos-skeleton\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst CloseVideosList = () => {\r\n  const { name } = useParams();\r\n  const { data, loading } = CustomFetchHook(\r\n    `search?part=snippet&maxResults=10&q=${name}`,\r\n    false\r\n  );\r\n\r\n  const filterVideos = data?.items?.filter(\r\n    (s) => s.id.kind === \"youtube#video\"\r\n  );\r\n\r\n  if (loading) {\r\n    return <SearchedVideosLoader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {filterVideos?.map((items, index) => (\r\n        <SearchCustomVideo\r\n          key={index}\r\n          videoImage={\r\n            items?.snippet?.thumbnails?.maxres?.url ??\r\n            items?.snippet?.thumbnails?.high?.url\r\n          }\r\n          title={items?.snippet?.title}\r\n          timePosted={items?.snippet?.publishedAt}\r\n          totalViews={items?.statistics?.viewCount}\r\n          link={`/youtube-clone/watch/${items?.id?.videoId ?? items?.id}/${\r\n            items?.snippet.channelTitle\r\n          }`}\r\n          authorTitle={items?.snippet?.channelTitle}\r\n          videoContentClassName={styles.content}\r\n          extraClassImage={styles.imageWidth}\r\n          showImage={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CloseVideosList;\r\n","export const viewsFormatter = (num) => {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"G\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"M\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"K\";\r\n  }\r\n  return num;\r\n};\r\n\r\nexport const dateFormatter = (dates) => {\r\n  let date = dates;\r\n  const splitDate = date?.split(\"-\");\r\n  const yearAndMonth = splitDate?.slice(0, 2).join(\"/\");\r\n  const getDate = splitDate\r\n    ?.slice(2)\r\n    ?.join(\"\")\r\n    ?.split(\"\")\r\n    .slice(0, 2)\r\n    ?.join(\"\");\r\n  return `${yearAndMonth}/${getDate}`;\r\n};\r\n"],"names":["SearchCustomVideo","props","_ref","_ref2","videoImage","title","timePosted","link","authorTitle","description","videoContentClassName","extraClassImage","_props$showImage","showImage","_jsxs","Link","to","className","styles","children","_jsx","join","Image","loadingSrc","placeholderimage","src","placeHolderStyle","width","dateFormatter","_data$items","name","useParams","_CustomFetchHook","CustomFetchHook","concat","data","loading","filterVideos","items","filter","s","id","kind","SearchedVideosLoader","_Fragment","map","index","_items$snippet$thumbn","_items$snippet","_items$snippet$thumbn2","_items$snippet$thumbn3","_items$snippet2","_items$snippet2$thumb","_items$snippet2$thumb2","_items$snippet3","_items$snippet4","_items$statistics","_items$id$videoId","_items$id","_items$snippet5","snippet","thumbnails","maxres","url","high","publishedAt","totalViews","statistics","viewCount","videoId","channelTitle","content","imageWidth","viewsFormatter","num","toFixed","replace","dates","_splitDate$slice","_splitDate$slice$join","_splitDate$slice$join2","splitDate","split","yearAndMonth","slice","getDate"],"sourceRoot":""}