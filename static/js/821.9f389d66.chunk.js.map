{"version":3,"file":"static/js/821.9f389d66.chunk.js","mappings":"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","sources":["webpack://youtube-clone/./src/components/custom-video/styles.module.scss?717a","components/custom-video/index.jsx","webpack://youtube-clone/./src/components/videos-grid/styles.module.scss?e611","components/videos-grid/index.jsx","config.js","pages/searched-results-page/resultsLayout.jsx","utils/fetchHook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"videoContainer\":\"styles_videoContainer__xDF7+\",\"videoImage\":\"styles_videoImage__9+0Nv\",\"videoContent\":\"styles_videoContent__8DN0j\",\"videoDesc\":\"styles_videoDesc__zIXdR\",\"videoResultSection\":\"styles_videoResultSection__dKfkj\"};","import { Link } from \"react-router-dom\";\r\nimport Image from \"../image-component\";\r\nimport placeholderimage from \"../../assets/placeholdersrc.jpg\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nexport const CustomVideo = (props) => {\r\n  const {\r\n    videoImage,\r\n    title,\r\n    timePosted,\r\n    totalViews,\r\n    link,\r\n    authorTitle,\r\n  } = props;\r\n  return (\r\n    <Link to={link} className={styles.videoContainer}>\r\n      <figure className={styles.videoImage}>\r\n        <Image\r\n          loadingSrc={placeholderimage}\r\n          src={videoImage}\r\n          placeHolderStyle={{ width: \"100%\" }}\r\n        />\r\n      </figure>\r\n      <div className={styles.videoContent}>\r\n        <Image\r\n          loadingSrc={placeholderimage}\r\n          src={videoImage}\r\n          placeHolderStyle={{ width: \"40px\" }}\r\n        />\r\n        <div className={styles.videoDesc}>\r\n          <h3>\r\n            {title?.length > 58 ? `${title?.substring(0, 58)}...` : title}\r\n          </h3>\r\n          <p>{authorTitle}</p>\r\n          {timePosted?.length && (\r\n            <div className={styles.videoResultSection}>\r\n              {totalViews?.length && (\r\n                <p>{Number(totalViews)?.toLocaleString()} Views</p>\r\n              )}\r\n              <p>{timePosted}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"videoGrid\":\"styles_videoGrid__9zFVE\",\"videoWrapper\":\"styles_videoWrapper__pJCQr\"};","import { CustomVideo } from \"../custom-video\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst VideosGrid = ({ data }) => {\r\n  return (\r\n    <div className={styles.videoGrid}>\r\n      {data?.map((items, index) => (\r\n        <section key={index} className={styles.videoWrapper}>\r\n          <CustomVideo\r\n            videoImage={\r\n              items?.snippet?.thumbnails?.maxres?.url ??\r\n              items?.snippet?.thumbnails?.high?.url\r\n            }\r\n            title={items?.snippet?.title}\r\n            timePosted={items?.snippet?.publishedAt}\r\n            totalViews={items?.statistics?.viewCount}\r\n            link={`/youtube-clone/watch/${items?.id?.videoId ?? items?.id}`}\r\n            authorTitle={items?.snippet?.channelTitle}\r\n          />\r\n        </section>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideosGrid;\r\n","export const myConfig = {\r\n  API_ENDPOINT: \"https://youtube.googleapis.com/youtube/v3\",\r\n};\r\n","import { useParams } from \"react-router-dom\";\r\nimport { CustomFetchHook } from \"../../utils/fetchHook\";\r\nimport { myConfig } from \"../../config\";\r\nimport VideosGrid from \"../../components/videos-grid\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { VideosLoader } from \"../../loaders/videos-skeleton\";\r\n\r\nconst SearchedResultsLayout = () => {\r\n  const { str } = useParams();\r\n  const { data, loading, error } = CustomFetchHook(\r\n    `${myConfig.API_ENDPOINT}/search?part=snippet&maxResults=50&q=${str}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`,\r\n    false\r\n  );\r\n\r\n  const filterVideos = data?.items?.filter(\r\n    (s) => s.id.kind === \"youtube#video\"\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={styles.searchResultsContainer}>\r\n        <VideosLoader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return error.message;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.searchResultsContainer}>\r\n      <h2 className={styles.resultsTitle}>\r\n        Showing results for:- <strong> {str} </strong>\r\n      </h2>\r\n      <VideosGrid data={filterVideos} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchedResultsLayout;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const CustomFetchHook = (url, appendNewData) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true);\r\n      try {\r\n        const getResponse = await fetch(url);\r\n        const response = await getResponse?.json();\r\n        if (response?.error) {\r\n          throw new Error('Oops Something Went Wrong....');\r\n        };\r\n        if (appendNewData) {\r\n          setData((prev) => [...prev, ...response?.items]);\r\n        } else {\r\n          setData(response);\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        setError(err);\r\n      }\r\n    })();\r\n  }, [url]);\r\n\r\n  return { data, error, loading };\r\n};\r\n"],"names":["CustomVideo","props","_Number","videoImage","title","timePosted","totalViews","link","authorTitle","_jsxs","Link","to","className","styles","children","_jsx","Image","loadingSrc","placeholderimage","src","placeHolderStyle","width","length","concat","substring","Number","toLocaleString","_ref","data","map","items","index","_items$snippet$thumbn","_items$snippet","_items$snippet$thumbn2","_items$snippet$thumbn3","_items$snippet2","_items$snippet2$thumb","_items$snippet2$thumb2","_items$snippet3","_items$snippet4","_items$statistics","_items$id$videoId","_items$id","_items$snippet5","snippet","thumbnails","maxres","url","high","publishedAt","statistics","viewCount","id","videoId","channelTitle","myConfig","API_ENDPOINT","_data$items","str","useParams","_CustomFetchHook","CustomFetchHook","process","loading","error","filterVideos","filter","s","kind","searchResultsContainer","VideosLoader","message","resultsTitle","VideosGrid","appendNewData","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setLoading","_useState5","_useState6","setError","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","getResponse","response","wrap","_context","prev","next","fetch","sent","json","Error","_toConsumableArray","t0","stop"],"sourceRoot":""}