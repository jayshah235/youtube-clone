{"version":3,"file":"static/js/726.90468109.chunk.js","mappings":"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","sources":["pages/video-detail-page/video-section.jsx","utils/formatters.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { viewsFormatter } from \"../../utils/formatters\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst PlayVideo = (props) => {\r\n  const { selectedVideoData } = props;\r\n\r\n  const [descLength, setDescLength] = useState(500);\r\n  return (\r\n    <div className={styles.videoPlayerContainer}>\r\n      <iframe\r\n        width=\"100%\"\r\n        src={\r\n          selectedVideoData?.id &&\r\n          `https://www.youtube.com/embed/${selectedVideoData?.id}?enablejsapi=1&autoplay=1`\r\n        }\r\n        title=\"YouTube video player\"\r\n        allow=\"accelerometer; autoplay;\r\n  clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n        allowFullScreen\r\n      />\r\n      <h2>{selectedVideoData?.snippet?.title}</h2>\r\n      <div className={styles.creatorInfo}>\r\n        <figure>\r\n          <img\r\n            src={selectedVideoData?.snippet?.thumbnails?.default?.url}\r\n            alt=\"thimbnail\"\r\n          />\r\n        </figure>\r\n        <div className={styles.subsInfo}>\r\n          <h6>{selectedVideoData?.snippet?.channelTitle}</h6>\r\n          <p>\r\n            {viewsFormatter(selectedVideoData?.statistics?.viewCount)} Views\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <p className={styles.vidDetailedInfo}>\r\n        {selectedVideoData?.snippet?.description?.substring(0, descLength)}{\" \"}\r\n        {descLength > 500 ? (\r\n          <strong\r\n            onClick={() => setDescLength(500)}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            show less....\r\n          </strong>\r\n        ) : (\r\n          <>\r\n            {selectedVideoData?.snippet?.description?.length > 500 && (\r\n              <strong\r\n                onClick={() =>\r\n                  setDescLength(selectedVideoData?.snippet?.description?.length)\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                show more....\r\n              </strong>\r\n            )}\r\n          </>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayVideo;\r\n","export const viewsFormatter = (num) => {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"G\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"M\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"K\";\r\n  }\r\n  return num;\r\n};\r\n\r\nexport const dateFormatter = (dates) => {\r\n  let date = dates;\r\n  const splitDate = date?.split(\"-\");\r\n  const yearAndMonth = splitDate?.slice(0, 2).join(\"/\");\r\n  const getDate = splitDate\r\n    ?.slice(2)\r\n    ?.join(\"\")\r\n    ?.split(\"\")\r\n    .slice(0, 2)\r\n    ?.join(\"\");\r\n  return `${yearAndMonth}/${getDate}`;\r\n};\r\n"],"names":["props","_selectedVideoData$sn","_selectedVideoData$sn2","_selectedVideoData$sn3","_selectedVideoData$sn4","_selectedVideoData$sn5","_selectedVideoData$st","_selectedVideoData$sn6","_selectedVideoData$sn7","_selectedVideoData$sn8","_selectedVideoData$sn9","selectedVideoData","_useState","useState","_useState2","_slicedToArray","descLength","setDescLength","_jsxs","className","styles","videoPlayerContainer","children","_jsx","width","src","id","concat","title","allow","allowFullScreen","snippet","creatorInfo","thumbnails","default","url","alt","subsInfo","channelTitle","viewsFormatter","statistics","viewCount","vidDetailedInfo","description","substring","onClick","style","cursor","_Fragment","length","_selectedVideoData$sn10","_selectedVideoData$sn11","num","toFixed","replace","dateFormatter","dates","_splitDate$slice","_splitDate$slice$join","_splitDate$slice$join2","splitDate","split","yearAndMonth","slice","join","getDate"],"sourceRoot":""}